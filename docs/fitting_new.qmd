---
title: "Integro-Difference Equation Models: Fitting (Prototype)"
format:
  html:
    code-fold: true
    toc: true
    mathjax: 
      extensions: ["breqn", "bm"]
jupyter: python3
include-in-header:
  - text: |
      <script>
      window.MathJax = {
        loader: {
          load: ['[tex]/upgreek', '[tex]/boldsymbol', '[tex]/physics', '[tex]/breqn'
        },
        tex: {
          packages: {
            '[+]': ['upgreek', 'boldsymbol', 'physics', 'breqn']
          }
        }
      };
      </script>
bibliography: Bibliography.bib
---

[Index](./index.html)

# Built-in methods

There is now a built in method for fitting this kind of model, ```IDEM.fit```. Reading some data (generated from the R-IDE package) and formatting it with ```panda```,

```{python}
import pandas as pd

df = pd.read_csv("z_obs.csv")

date_mapping = {date: i-1 for i, date in enumerate(df['time'].unique(), 1)}
df['time'] = df['time'].map(date_mapping)

#obs_data = ST_Data_Long(x = jnp.array(df['s1']), y=jnp.array(df['s2']), t=jnp.array(df['time']), z = jnp.array(df['z']))
#obs_data_wide = ST_towide(obs_data)
```


Now that we have the data
